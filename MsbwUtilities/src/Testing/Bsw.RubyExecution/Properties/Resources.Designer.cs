//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bsw.RubyExecution.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bsw.RubyExecution.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM These environment variables set by TeamCity seem to get in the way of bundle install completing properly
        ///set gem_home=
        ///set gem_path=
        ///set rubylib=
        ///set rubyopt=
        ///set bundle_bin_path=
        ///set bundle_gemfile=
        ///
        ///REM execute the bundle install
        ///
        ///bundle install &gt; bundle_install.log.
        /// </summary>
        internal static string bundle_install {
            get {
                return ResourceManager.GetString("bundle_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///rem IRB is used so we can get output, otherwise we can&apos;t see the output in our .NET unit tests
        ///SET SHUTDOWN=%1
        ///SET SCRIPT_PATH=%2
        ///SHIFT
        ///SHIFT
        ///set after1=
        ///
        ///:loop
        ///if &quot;%1&quot; == &quot;&quot; goto end
        ///set after1=%after1% %1
        ///SHIFT
        ///goto loop
        ///
        ///:end
        ///echo Current path is %PATH%
        ///rem Bundler gets in the way of redirecting standard out and isn&apos;t needed for what we&apos;re doing here
        ///set gem_home=
        ///set gem_path=
        ///set rubylib=
        ///set rubyopt=
        ///set bundle_bin_path=
        ///set bundle_gemfile=
        ///
        ///echo on 
        ///
        ///call irb %SCRI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string run_ruby {
            get {
                return ResourceManager.GetString("run_ruby", resourceCulture);
            }
        }
    }
}
